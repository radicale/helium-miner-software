name: BalenaCloud Deploy (Production)

on:
  push:
    # Only run workflow for pushes to specific branches
    branches:
      - production

jobs:
  # build-prod:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       sbc: [raspi, rockpi]
  #       frequency: [470, 868, 915]
  #       variant: [indoor, outdoor]
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #     - name: Random sleep (balena API workaround)
  #       run:  sleep $[ ( $RANDOM % 180 )  + 1 ]s
  #     - name: Change i2c bus for RockPi
  #       if: matrix.sbc == 'rockpi'
  #       run: |
  #         sed -i -E "s/\/dev\/i2c-1:\/dev\/i2c-1/\/dev\/i2c-7:\/dev\/i2c-7/g" docker-compose.yml
  #         ROCKPI="-rockpi"
  #         echo "ROCKPI=$ROCKPI" >> $GITHUB_ENV
  #     - name: Balena Deploy (ROCK Pi)
  #       uses: nebraltd/balena-cli-action@v12.54.5
  #       if: matrix.sbc == 'rockpi' && success()
  #       with:
  #         balena_api_token: ${{secrets.BALENA_API_TOKEN}}
  #         balena_command: "deploy nebraltd/helium-${{ matrix.variant }}-${{ matrix.frequency }}${{ env.ROCKPI }} --logs --debug --nocache --build"
  #     - name: Balena Deploy (RasPi)
  #       uses: nebraltd/balena-cli-action@v12.54.5
  #       if: matrix.sbc == 'raspi' && success()
  #       with:
  #         balena_api_token: ${{secrets.BALENA_API_TOKEN_1}}
  #         balena_command: "deploy nebraltd/helium-${{ matrix.variant }}-${{ matrix.frequency }} --logs --debug --nocache --build"

  open-fleet:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Random sleep (balena API workaround)
        run:  sleep $[ ( $RANDOM % 180 )  + 1 ]s
      - name: Balena Deploy
        uses: nebraltd/balena-cli-action@v12.54.5
        if: success()
        with:
          balena_api_token: ${{secrets.BALENA_API_TOKEN}}
          balena_command: "deploy gh_radicale/pisces --logs --debug --nocache --build"

  # commercial:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #     - name: Random sleep (balena API workaround)
  #       run:  sleep $[ ( $RANDOM % 180 )  + 1 ]s
  #     - name: Balena Deploy
  #       uses: nebraltd/balena-cli-action@v12.54.5
  #       if: success()
  #       with:
  #         balena_api_token: ${{secrets.BALENA_API_TOKEN_3}}
  #         balena_command: "deploy nebraltd/helium-miner-commercial --logs --debug --nocache --build"
